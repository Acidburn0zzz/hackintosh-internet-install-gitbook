{"./":{"url":"./","title":"First contact","keywords":"","body":"First contact Some people can't just get the Vanilla guide from /r/Hackintosh working just right. Reasons can differ: can't set up the VM for whatever reason, can't access a real mac (although this guide works on macOS too), download corruptions, small USB disks (at this time and age? shame on you), 4GB of RAM (seriously?)... or just pure laziness. It happens that real macs can re-install macOS directly from the internet, without the need for a disk or installer support, and they do that through \"Internet Recovery\". When a mac finds no OS or recovery partition, it will try to load a recovery system from Apple's servers and then boot it then install macOS through the internet to the mac. And following the same idea, we can, as hackintoshers, do the same (sort of). Btw, did I tell you this guide will work on any OS? If you're here from gitbook, I'm moving this guide to Github Pages, use this LINK for the new layout (has dark theme, so you know it's 10/10). How does it work? So this procedure goes mainly like this Download macOS recovery system (as we can't do that directly from clover, yet) Restore the macOS recovery system to the USB Install Clover to the USB Configure Clover (config, Kexts and UEFI Drivers) Boot macOS Recovery Environment Format and whatever you like to do in the macOS installer Install macOS BOOM! We're done. What will this guide cover? Requirements macOS recovery downloading USB device partitioning and macOS recovery image restoring Clover configuration Kexts UEFI drivers config.plist (configuration file) For laptops For desktops Firmware/BIOS general settings advice Booting and Installing macOS This guide will *probably* not contain any post-install guide, as it's documented on the Vanilla Guide. This guide is for Pre-install preparation and Install, you will need to go to the Vanilla Guide to finish the rest for Desktop users, and for laptop users you'll have to continue here. This will be brought up at the end of this guide. Before you even start: If you don't know your own hw, and have no clue how to find it, hackintosh might not be for you. ​ ~ Everyone This is not a very welcoming community for people who do not want to do some self-study and learn from other's findings and instead wait for someone to spoon-feed them information and make things work for them. Read The Fucking Manual and work your way through it and do some intense googling. READ THE GUIDE FULLY TWICE BEFORE ASKING. Most probably your question has already been answered, and if not, someone did ask it and it's on the net somewhere. Credits: Apple (for their OS and the recovery images) /u/CorpNewt (for his tool and hard work on making those scripts) Rehabman (for his drivers, configs, guides and other hack related stuff) acidanthera team (for all the driver and tools that made hackintoshing 10x easier than 5 years ago) Clover team (for the boot manager) cVad (for his BDU tool in my previous guide and idea) kylon (for CCE) And other people that helped directly or indirectly into making this happen (remind me if I forget yo) Good luck :)... "},"requirements.html":{"url":"requirements.html","title":"Requirements","keywords":"","body":"Requirements Physical requirements OK. So this thing requires a lot of stuff to prepare. *KNOW YOUR HARDWARE* Your CPU name, generation Your RAM size (and slots used if needed) Your GPUs (All of them, Intel, AMD, Nvidia. Laptop users, you may have 2 GPUs, only the intel one will work, no questions asked) Your Storage Devices (HDD/SSD, SATA/M.2, NVME/AHCI/RAID/IDE configuration. Note: Only NVME and AHCI/M.2 or AHCI/SATA will work. Other configurations may be harder to get by. RST users need to disable it, it can be named Intel Rapid Storage, RST or RAID) Your screen resolution (for laptops essentially) Your Audio codec Your Motherboard Model OR your Laptop Model Your LAN or Ethernet chipset Your WLAN/BT chipset A BASIC KNOWLEDGE ON COMMAND LINES AND HOW TO USE A TERMINAL/COMMAND PROMPT This is not just [CRUCIAL], this is the basis of this whole guide. Dont come crying at me because you dont know how to cd to directory or delete a file. Your target computer MUST be an Intel Core/Xeon machine: Machines with Pentium may get it working with a FakeCPUID in the clover configuration later brought up in this guide Machines with Celerons may have issues Machines with Atom can use that to get a better machine Those 3 CPU types above will not get onboard intel graphics working (only some rare cases of new Pentium CPUs, but that's not tested by me or recommended), you will need a dedicated GPU for it. Laptop users with any of the 3 above CPU can also look for a new device, this will not work for you. AMD machines are harder to make, thought this method has been tested with AMD but the guide for it *may* be released by someone else (I wont be updating my guide since I have 0 AMD hackintosh experience). Hence this guide will be Intel-focused. A minimum of 4GB USB drive Note: if you have a rooted android phone, look for DriveDroid, and make sure you have a shared internal storage (no separate /data partition) usually all phones made after 2012 should be like that, so if yours is fairly new it will handle it just fine. Note2: use a USB2.0 drive, HDDs may not be a good choice, also if you don't have any USB2.0, plug the USB in a USB2.0 port if available, or use a USB extension cord that doesn't support USB3.0, this way the USB3.0 drive will run in USB2.0 mode. [CRUCIAL] a LAN connection (no wifi, no wifi dongles, Ethernet USB adapter may work depending on macOS support) and you must know your LAN card's model (and your internet speed) For lappies: you must either have a physical lan port, or a compatible macOS ethernet dongle/adapter, or in case your have a compatible wifi card, it's also good but not recommended (unless it's the only way to go) For people who can't use ethernet but have an android phone, you can connect your android phone to WiFi and then tether it using USB. IOS users can do this as well but you need the tetherme tweak on a jailbroken iphone. Unfortnunately if you are not on the right version (any ios version up to 12.1.2) this is not possible. :/ A fast internet connection (20Mbps downlink may take about an hour for the install procedure, the faster the better). Users have complained of slow or locked up downloads, that's mainly due to slow or unstable internet. A Proper OS Installation: Be it: macOS (a fairly recent one would be better) Windows (Windows 10, 1703 or newer) Linux (with python2.7 or later), make sure it's clean and properly functioning. And 15GB of free space on the drive you're working on. On Windows, your OS disk must have 15GB free at least Some googling skills, which a lot of you lack sadly. Brain cells and patience and reading capabilities [CRUCIAL] Some say that 2 neurons are enough. Non-physical requirements Python 2.7 or greater: For Windows, get it from https://www.python.org/downloads/windows/ and make sure you enable \"add to PATH\" in the install NOTE: There seem to be a bug in 1903 release of Windows, if the .bat file doesn't load for you, just open a new PS/CMD window (as admin), and run python from the guide. DO NOT use the python release in the Microsoft Store, get it from the official website. For linux users, install it if you dont have it following your distro's tools For macOS users, you already have 2.7+ version installed, no need for extra tools ProperTree [Recommended]: a simple tool to edit plist files, from /u/corpnewt https://github.com/corpnewt/ProperTree Or text editor: Notepad++, Sublime Text, VSCode... Note: on October/fall 2018 Windows Update, the native notepad can work too. Older versions of windows must use a 3rd party text editor. If you dont know what this is, get a one of the text editors above. gibMacOS: a sweet tool from /u/corpnewt https://github.com/corpnewt/gibMacOS if you have git on windows use it to clone the repo if you dont, press Clone or Download button and download as Zip, extract it somewhere Other software requirements will be downloaded thorough the guide (OS specific) Dualbooting If you're thinking of dualbooting macOS and other OS, check this guide here, then come back and finish what you started. Now you're probably ready for the next step... "},"preparing-your-installer/":{"url":"preparing-your-installer/","title":"Preparing your Installer","keywords":"","body":"Preparing your Installer This section will cover preparing macOS installer in your USB, and it will contain: Getting the macOS Recovery image from Apple server through gibMacOS Getting the image restored to the USB on: Windows (with Clover included) Linux macOS Let's get started... "},"preparing-your-installer/untitled-1.html":{"url":"preparing-your-installer/untitled-1.html","title":"Downloading the Recovery HD image","summary":"Step 1","keywords":"","body":"Downloading the Recovery HD image After cloning/downloading gibMacOS, you'll have to open the the folder where it is (or cd to it if you clone it with git). If you're using macOS or Linux, you should know how to cd to it through your preferred Terminal emulator. If you're a Windows user, follow these instructions to get to the command line inside the folder. Open Command Prompt/PowerShell and cd to where it is. OR open the folder where it is, press Files > Open Windows PowerShell Now that you're inside the command prompt/powershell/terminal, we'll use gibMacOS to download the Recovery HD to be restored: run python gibMacOS.command -r -v and replace with your target version: 10.14 or mojave for macOS Mojave release 10.13 or \"high sierra\" (with quotes) for macOS High Sierra release For the older releases, just download the .pkg file directly, as they've been removed from the catalog that apple provides: Sierra El Capitan Yosemite Credit: cvad's tool The software will download the recovery image, meanwhile: Plug your USB device (USB 2.0 drive are recommended) Backup any data *from* it Format it (it will be formatted anyways later on) Now that's downloaded, let's move on to the USB drive making... "},"preparing-your-installer/preparing-your-installer-media.html":{"url":"preparing-your-installer/preparing-your-installer-media.html","title":"Preparing your installer media","summary":"Step 2","keywords":"","body":"Preparing your installer media After the download, you'll find a new folder named macOS downloads where the program we used downloaded macOS recovery image for your macOS version. For this part of the setup. I'll be separating it to the 3 main OSes and how to make it. Winders (windows) Thanks to /u/corpnewt's time and head-butting, he made a pretty good script to make the installer on the USB. There is an issue with the latest Clover releases where the network kexts dont get injected into macOS Recovery/Installer environments. The latest known good Clover that did inject them properly is r5092. Please use this release then update it afterwards. Some users have reported r5103 had this issue fixed. Inside the same folder of gibMacOS, you'll find a cute MakeInstall.bat , double click it, accept UAC admin user, you'll be greeted by a CMD screen. The software will download software needed (dd port for windows and 7-zip). Then you'll be greeted with a list of drives: Carefully choose your drive (look for the size, name or other features that points to your USB device). type in its number press enter and follow the rest of the instructions You'll be asked to drop the Recovery image path, go to macOS downloads and explore its folders, until you get to a file with .pkg in the end, named either RecoveryHDMetaDmg or RecoveryHDUpdate (depending on your macOS version). Drag-n-Drop will not work, so the workaround is Shift + Right click on the file, then select Copy as Path as shown here Note: you can just paste the path of the parent folder of the pkg file (found in macOS downloads > publicrelease (if you used another channel, go to that channel) ) and the script will look for the pkg. then paste it in the CMD window (by Right Clicking in the window, this will paste what's in the clip board) the program will then: extract and restore to the USB the recovery downloaded earlier download and install clover (unconfigured) to the USB install legacy boot sectors for Legacy users (wont affect UEFI users) You may continue go to the next section of this guide... Loonix (Linux) This section will target making the necessary partitions in the USB device. You can use your favorite program be it gdisk fdisk parted gparted or gnome-disks. I will focus on gdisk as it's nice ¯\\(ツ)\\/¯ and can change the partition type later on, as we need it so that macOS Recovery HD can boot. [the distro used here is Ubuntu 18.04, other versions or distros may work] In terminal: run lsblk and determine your USB device block run sudo gdisk /dev/ send p to print your block's partitions (and verify it's the one needed) send o to clear the partition table and make a new GPT one confirm with y send n partition number: keep blank for default first sector: keep blank for default last sector: +200M to create a 200MB partition that will be named later on CLOVER Hex code or GUID: 0700 for Microsoft basic data partition type send n partition number: keep blank for default first sector: keep blank for default last sector: keep black for default (or you can make it +3G if you want to partition further the rest of the USB) Hex code or GUID: af00 for Apple HFS/HFS+ partition type send w Confirm with y Close gdisk by sending q Use lsblk again to determine the 200MB drive and the other partition run mkfs.vfat -F 32 -n \"CLOVER\" /dev/ to format the 200MB partition to FAT32, named CLOVER then cd to macOS downloads and keep going until you get to a pkg file download p7zip-full (depending on your distro tools) for ubuntu/ubuntu-based run sudo apt install p7zip-full for arch/arch-based run sudo pacman -S p7zip for the rest of you, you should know ¯\\(ツ)\\/¯ run this 7z e -txar *.pkg *.dmg; 7z e *.dmg */Base*; 7z e -tdmg Base*.dmg *.hfs this will extract the recovery from the pkg through extracting the recovery update package then extracting the recovery dmg then the hfs image from it. then when you get 4.hfs or 3.hfs (depending on the macOS version used) run dd if=*.hfs of=/dev/ bs=8M --progress (you may change the input file if and the block size to match your needs after that, you're ready to go for the next step of the guide... crackOS (macOS) After the download, open macOS downloads/.../... until you find RecoveryHDUpdate.pkg or RecoveryHDMetaDmg.pkg (enable file name extensions in Finder under Finder > Preferences > Advanced). locate the pkg do not open it rename the extension from .pkg to .dmg open the image (it will be mounted) find Basesystem.dmg double click to mount it open Disk Utility application (Launchpad > Other >) Select View > Show All devices (above the drive list) Select your USB device (not the partition) Select Partition if you do not see partition: Select Erase Name: whatever Format: MacOS Extended Journaled Scheme: GUID Partition Table Make: a minimum of 200MB partition Name: CLOVER Format: MSDOS the rest Name: whatever you want Format: MacOS Extended Journaled Apply Select the MacOS Extended Journaled partition Select Restore Choose BaseSystem from the list (it should be the image you mounted earlier) Let it restore When done you can continue this guide... "},"clover-boot-manager/":{"url":"clover-boot-manager/","title":"Clover Boot Manager","keywords":"","body":"Clover Boot Manager This section will cover Clover Boot Manager configuration, it will include Getting Clover installed and its UEFI driver Getting macOS drivers and putting them where they should be Configuring Clover by creating a proper config.plist for it Let's get started... "},"clover-boot-manager/clover-and-friends.html":{"url":"clover-boot-manager/clover-and-friends.html","title":"Clover and friends [part 1]","summary":"Step 1: Prepare Clover","keywords":"","body":"Clover and friends [part 1] For this part of the guide you'll install and prepare clover for the ramble. There is an issue with the latest Clover releases where the network kexts dont get injected into macOS Recovery/Installer environments. The latest known good Clover that did inject them properly is r5092. Please use this release then update it afterwards. Some users have reported r5103 had this issue fixed. Install Clover For Windows, you already did with the tool before, skip to Prepare Clover For Linux or macOS: Download the latest Clover LZMA r5092 (Clover LZMA latest) from Dids' repo (thanks bb ❤️) For linux, use p7zip or file roller or whatever you use, to extract the LZMA and TAR inside it until you get the iso For macOS, use keka (google it) or The Unarchiver (AppStore, Free) to extract the LZMA and TAR inside it until you get to the iso Mount the ISO On linux, use mount command with -o loop,ro or with gnome-disks by right-clicking the iso > mount image On macOS, double click Copy the EFI folder from the ISO to the CLOVER USB you should have CLOVER (USB) > EFI (folder) > CLOVER & BOOT Note for macOS users who want to use legacy on the destination machine: If you're booting from UEFI on the destination go to step 2: Mount the ISO (do not follow this note) Download the pkg from the source above Open the installer Select the destination as \"CLOVER\" (USB) Select Customize Choose: Boot Sectors : Install boot0ss in MBR Clover for BIOS (legacy) booting: Clover EFI 64-bits SATA Themes: (a theme, choose clovy) BIOS Drivers, 64 bit: ApfsDriverLoader - AppleImageLoader Uncheck the rest of there is anything checked Install Go to Step 7 below Prepare Clover Open CLOVER > EFI > CLOVER delete doc and OEM (remove if any found) Make a folder named ACPI with subfolders: origin patched WINDOWS (case sensitive) Clover Drivers (EFI drivers, not to be confused with kexts, which are macOS drivers) for UEFI users: Open drivers > UEFI, delete everything, BUT ApfsDriverLoader - OcQuirks - FwRuntimeServices - HFSPlus (If AptioMemoryFix or HFSPlus are missing, copy them from drivers > off) for Legacy users: go to drivers > BIOS, keep it as it is. (If AptioMemoryFix or HFSPlus are missing, copy them from drivers > off) Delete now: UEFI users, delete: drivers > BIOS Legacy users, delete: drivers > UEFI Go to kexts > Other Go to Goldfish64's Kext Repo Download these: [Note: Explore each folder and you'll find a Zip file, get that Zip file, not the whole folder] NECESSARY KEXTS | Kext | Mandatory | Description | | :--- | :--- | :--- | | Lilu | ✅ | An open source kernel extension bringing a platform for arbitrary kext, library, and program patching throughout the system for macOS. | | VirtualSMC | ✅ Better with Lilu | Advanced Apple SMC emulator in the kernel. | | WhateverGreen | ✅ Requires Lilu | Various patches necessary for certain ATI/AMD/Intel/Nvidia GPUs | | USBInjectAll | ✅ (may get deprecated soon™️) | Kext to inject all USB ports for the installed Intel EHCI/XHCI chipset automatically. | | VoodooPS2Controller | ✅ for laptops and desktops with PS2 peripherals | Enables PS/2 Support on macOS. | **NETWORK KEXT** | Wired Network Kext | Devices to use with | | :--- | :--- | | AppleIntele1000 | Old Intel Cards (IntelMausi should be better) | | HoRNDIS | Android RNDIS Tethering. [Pre-compiled kext only](https://github.com/midi1996/JBOG/blob/master/Extra/HoRNDIS.kext.zip?raw=true) and [official website]( https://joshuawise.com/horndis) to get the latest release whenever possible. | | IntelMausi | For most Intel NICs | | AtherosE2200Ethernet | For some Atheros/QualcommAtheros/Killer\\(some\\) NICs | | BCM5722D | For Broadcom BCM5722 NetXtreme and NetLink family | | BCM57xx | _\\(other than 5722\\)_ get FakePCIID zip folder, and use FakePCIID + FakePCIID\\_BCM57XX\\_as\\_BCM57765 | | RealtekRTL8100 | For 10/100 Realtek Cards \\(Realtek FE\\) | | RealtekRTL8111 | For Gigabit Realtek Cards \\(Realtek GbE\\) | | SmallTreeIntel211 | for some Intel ethernet chipsets, [link for the binary](https://cdn.discordapp.com/attachments/390417931659378688/556912824228773888/SmallTree-Intel-211-AT-PCIe-GBE.kext.zip). | | Wireless Kext | Devices to use with | | :--- | :--- | | *none* | USB Wifi Users: **NO \\[won't work while the install, look for the driver after the install** | | AirPortBrcmFixUp | For Broadcom chipsets: BCM4360, BCM4352, BCM4350 (found in DW1830, DW1560, DW1820A -- not recommended card --, Apple BRCM94360CS2/2CS/CD) | | ProbookAtheros.kext | for Atheros based chips _\\(AR5B95/195/97/197, based on AR9280/AR9285 SoC\\)_: * go to [HP Probook 4x30 DSDT Patch]( https://github.com/RehabMan/HP-ProBook-4x30s-DSDT-Patch/archive/master.zip) * extract the zip * explore to `kexts` * get `ProbookAtheros.kext`**The kext will not work on Catalina/Mojave anymore, AppleAtheros40 kext has been deprecated in 10.14+ and will need special workaround that will not work in a recovery environment.** | | *none* | Intel: _NOPE_ - Change it | | *none* | QComAtheros: _NOPE_ - Change it | | ATH9KFixUp | for Atheros based on _AR95XX-AR94XX_: ATH9KFixUp with proper boot argument options seen in the original github [repo](https://github.com/chunnann/ATH9KFixup) or rehabman's [fork](https://github.com/RehabMan/ATH9KFixup) \\(DO NOT install it in /S/L/E, just use Clover's folder).**The kext will not work on Catalina/Mojave anymore, AppleAtheros40 kext has been deprecated in 10.14+ and will need special workaround that will not work in a recovery environment.** | Extract every zip Note: a kexts is a macOS driver, and it's in a form of a a_folder_name.kext, on windows it will show as a folder, on macOS it will show as a file. now copy VirtualSMC.kext (or FakeSMC.kext) - Lilu.kext - WhateverGreen.kext - USBInjectAll.kext - AppleALC.kext - [your_ethernet_driver].kext (and any extra kext you needed from above) and put it in CLOVER (USB) > EFI > CLOVER > kexts > Other. [skip the sensor kexts, they may cause kernel panics, aka KP. For VirtualSMC, copy over SMCProcessor if you want to, leave the rest out] Basically what you should end up with: Lilu.kext VirtualSMC.kext WhateverGreen.kext USBInjectAll.kext VoodooPS2Controller.kext (for laptops and PS2 users) a network driver.kext Now you're mostly done with Clover and macOS installer preparation. Extra note for X299 people: You may need to add GenericUSBXHCI kext from the kext repository above, along VoodooTSCSync if you can't enable Core Syncing in your firmware, more on that here [USB] and here [Go to the BIOS section, as it's the most important part of that whole talk]. Important You must check [MUST READ] Config.plist Basics section before getting to [part 2]. "},"clover-boot-manager/config.plist-basics.html":{"url":"clover-boot-manager/config.plist-basics.html","title":"Config.plist Basics","summary":"Step 2: READ THIS NOW!","keywords":"","body":"Config.plist Basics You will need this information, if you already know your way around XML format, it will be a breeze for you (you still need to read it though). This will show you how to handle your config.plist manually, and I **strongly recommend** that you learn this properly for the next section. Config.plist Basics - Vanilla Guide Clover Template - Fewtarius Laptop Guide Big thanks to /u/corpnewt and /u/fewtarius for the time and effort put in those guide. You shall go to the next step only if your read the above, you will have a bad time if not. "},"clover-boot-manager/clover-and-friends-part-2.html":{"url":"clover-boot-manager/clover-and-friends-part-2.html","title":"Clover and friends [part 2]","summary":"Step 3: Configuring Clover","keywords":"","body":"Clover and friends [part 2] Now your USB has clover and a macOS recovery. For the second part we will create a config.plist. There are two section: LAPTOPS and DESKTOPS. Pick the one for you setup. For lappies: Follow Fewtarius's Laptop Guide, this part will start from the beginning with Clover drivers and stuff, do follow it properly. For deskies: NOTE: This is a brief and limited guiding to get booting and running. This is not meant to be the final config. Check the link at the end if this part to understand what's going on. Open CCE (it's a link): Cloud Clover Editor: an open-source web-based clover editor, and better than the app in some ways. Create a new config Under ACPI: if you have a 4rd Gen intel Core or newer: select Generate Plugin Type under SSDT if you have a 3nd Gen intel Core or older: You must make a CPUPM SSDT after the install (check the Laptop PM link in Posty Posty) [May cause issues, select them after the install] Select FixRTC FixTMR FixIPIC under DSDT > Fixes In the bottom right of that section: Fix ACPI Tables Headers and Auto Merge SSDTs [For people with iGPU] Select the Blue Globe under Patches and choose GFX0 to IGPU Under Boot: Boot Arguments (the big zone): -v debug=0x100 nv_disable=1 kext-dev-mode=1 dart=0 (these are generic boot args for: Verbose -v debug=0x100 - Disabling Nvidia drivers from loading nv_disable=1and works only on 10.11 and prior - unsigned kexts allow in for 10.10.x kext-dev-mode-1 - disable VT-d on macOS dart=0) XPM detection: NO Under Devices: USB: Inject - Add Clock ID - Fix Ownership Audio: Inject : 1 (type it inside Layout ID) Properties: follow the platform that suites you if you're using an intel GPU: For IvyBidge For Haswell * For Skylake * For KabyLake * For CoffeeLake * Under GUI: Scan Options: Custom - Scan Entries - Scan Tools - Scan Kernel: Disabled - Scan Legacy: Disabled. [optional] Mouse: Enabled [optional] Screen Resolution - Language - Theme (I recommend Embedded Theme Type: Dark) Under Graphics: Keep it CLEAN, nothing here. Under Kernel And Kext Patches: Apple RTC - Kernel PM Select the Blue Globe in Kernel Patches: add all patches [optional] IF YOU NEED IT, choose a FakeCPU ID (only if you're using an older macOS version on a new hardware system, eg: running Sierra on a CoffeeLake system, choose either KabyLake if it's 10.12.6, or SkyLake id = [ONLY FOR IVYBRIDGE AND SANDYBRIDGE] AppleICPUPM (this helps with AppleIntelCPUPM kernel panic, it patches it for locked MSR 0xE2) Under RT Variables: Booter Config: 0x28 Csr Active Config: 0x3E7 (some may use 0x67 for pre-High Sierra) Under SMBIOS: Coffee Lake - iMac18,2/18,3 or iMac19,x Use iMac18,1 if you are using the iGPU only Kabylake - iMac18,2/18,3 Skylake - iMac17,1 Broadwell - iMac16,1 (rarely used, if ever) Haswell Refresh (Devil's Canyon) - iMac15,1 Haswell With NVIDIA GPU - iMac14,2 Haswell With iGPU - iMac14,1 Ivy Bridge - iMac13,2 Sandy Bridge - iMac12,2 (although recently I've had better success with iMac13,2) X79/X99 - MacPro6,1 X299 - iMacPro1,1 (~source: Vanilla guide from /u/corpnewt, edited) Under System Parameters: Inject Kexts: Yes Under Boot Graphics: [optional] for high resolution panel users (3k~4k, 1440p...) change UI Scale to 2 Select the two squares on the top right corner Select Download name: config (no extension) Download Save Rename and copy the resulting plist file and paste it in CLOVER (partition)> EFI > CLOVER and replace the one already there. NOTE: to understand any of these options you must read this guide: https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide/. This guide gathers information and explanations for most of the hackintoshing process. Use it as an information base and guide if needed. This can be also done with CCE. "},"firmware-changes.html":{"url":"firmware-changes.html","title":"Firmware changes","keywords":"","body":"Firmware changes Now depending on your computer motherboard make sure of: For Desktops: XHCI Handoff: Enabled (if applicable, some may not have this option) OS Type: Other (if applicable) Secure Boot: Disabled (refer to google or your motherboard's manual on how to disable it) Legacy/CSM support: Disabled [if you see a garbled screen, enable this] If you have an Nvidia/AMD GPU: NO DISPLAY is connected to the motherboard's DP/HDMI/VGA/DVI ports under System Agent (SA) [or some other menu], Graphics Settings, Main Display: PEG or PCIE Disable anything like: Hybrid Graphics, Dual Graphics, DVMT size ... that are related to Intel GPU If you have Intel GPU: make sure your DVMT pre-alloc (not to be confused with DVMT size), is set to 64MB (or higher, 64 is enough), DMVT size/apertures/whatever, to the max. For laptops: make sure you have Secure Boot Disabled TMP/Security Chips/Security modules Disabled (if possible, it may be enabled later on) DVMT-prealloc to 64MB (if possible, not to be confused with DVMT size/aperture/whatever, however it may be seen as Graphics Memory) move from RAID/IDE to AHCI (if applicable) Disable the external GPU (if possible) Enable USB Legacy support (on some cases) Disable fast boot Disable LAN/WLAN/WWAN boot/wake Disable USB wake "},"yup-you-made-it.html":{"url":"yup-you-made-it.html","title":"Yup, you made it","keywords":"","body":"Yup, you made it Now you're ready to plug-n-play. To start the installation: Plug the Ethernet Plug the USB Start the computer into the boot menu (refer to your motherboards manual or google) Select your USB device (make sure it says UEFI or PX before it, some motherboards with only legacy may not find UEFI, it's fine, tho I'm not supporting Legacy booting atm). Select Boot macOS Recovery from ... (or Boot macOS Install from OS X Base System, this changes depends on the release chosen) Wait for the wall of text to make you feel like a hackerman Note: if it gets stuck with a Stop sign, change your USB drive's port, use a USB2.0 drive, or use a USB2.0 extension cord. Note2: if you get a black screen at then end of the installer on Intel HD GPUs, reboot to Clover, Press O (letter), go to Graphics Injection, change FakeID to 0x12345678, go back and boot. You will have to do this on every reboot until you get to the desktop. The Graphics will be slow and sluggish, fix it asap. Use google then. When you get to the Installer screen (it may take several minutes for it to load), open Utilities > Network Utility. Check if there is a connection, if not, check your LAN cable, and your LAN drivers from above. Go back, select Disk Utility, select the drive to format, nuke it as MacOS Extended Journaled, name it something and go back. Note: if you want to multiboot, go here [reminder] Note2: DATA == GONE, BYE Click on Disk Utility on top > Quit Disk Utility. Select Reinstall macOS YES YOU AGREE Select your disk Let it install (the faster the internet the better). After that, it will reboot for the second stage of the install, boot clover, it should now autoselect Boot Install macOS from , if not, then select it on your own and boot it up, let it finish. "},"posty-posty.html":{"url":"posty-posty.html","title":"Posty-Posty","keywords":"","body":"Posty-Posty Now that's installed, here are some useful links for post install (and also configuring things while you're at it): Desktops /u/corpnewt Clover Vanilla Guide: https://hackintosh.gitbook.io/-r-hackintosh-vanilla-desktop-guide Hackintosh Slav OpenCore Guide: https://khronokernel.github.io/Opencore-Vanilla-Desktop-Guide/ Laptop Fewtarius Laptop Guide: https://fewtarius.gitbook.io/laptopguide/ Laptop install guide [OLD, check above]: https://www.tonymacx86.com/threads/guide-booting-the-os-x-installer-on-laptops-with-clover.148093/ Laptop Rehabman FAQ: https://www.tonymacx86.com/threads/faq-read-first-laptop-frequent-questions.164990/ Laptop common issues: https://www.tonymacx86.com/threads/readme-common-problems-changes-fixes-on-mojave.255823/ Laptop backlight: https://www.tonymacx86.com/threads/guide-laptop-backlight-control-using-applebacklightinjector-kext.218222/ Laptop PM: https://www.tonymacx86.com/threads/guide-native-power-management-for-laptops.175801/ Laptop USB SSDT: https://www.tonymacx86.com/threads/guide-creating-a-custom-ssdt-for-usbinjectall-kext.211311/ Laptop USB SSDT Power: https://www.tonymacx86.com/threads/guide-usb-power-property-injection-for-sierra-and-later.222266/ Laptop dual GPU issue: https://www.tonymacx86.com/threads/guide-disabling-discrete-graphics-in-dual-gpu-laptops.163772/ Laptop DSDT/SSDT patching: https://www.tonymacx86.com/threads/guide-patching-laptop-dsdt-ssdts.152573/ Laptop DSDT patching for battery: https://www.tonymacx86.com/threads/guide-how-to-patch-dsdt-for-working-battery-status.116102/ Laptop Clover Hotpatch [only after successful DSDT patching]: https://www.tonymacx86.com/threads/guide-using-clover-to-hotpatch-acpi.200137/ For either: OpenCore Configuration Acidanthera's WhateverGreen documentation AppleALC wiki Osy's HDA Fix Thunderbolt shenanigans (good bed time stories) VoodooI2C's documentation "}}